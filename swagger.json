{
  "info": {
    "version": "1.0.0",
    "description": "Botify Saas API",
    "title": "Botify API",
    "x-codegen-settings": {
      "useMethodPrefix": false,
      "useModelPostfix": false,
      "useControllerPostfix": false,
      "useEnumPostfix": false,
      "useConstructorsForConfig": false,
      "collectParameters": true,
      "brandLabel": "Botify",
      "nodeHttpClient": "NODE_SUPERAGENT",
      "arraySerialization": "CSV"
    }
  },
  "paths": {
    "/analyses/{username}/{project_slug}": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Analysis"
                  },
                  "readOnly": true,
                  "type": "array",
                  "description": ""
                },
                "next": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "previous": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "page": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "size": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                }
              }
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "List all analyses for a project",
        "parameters": [
          {
            "description": "Page Number",
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "description": "Page Size",
            "type": "integer",
            "name": "size",
            "in": "query"
          }
        ],
        "tags": [
          "Project"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List all analyses for a project",
        "operationId": "getProjectAnalyses"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnalysisDetail"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Get an Analysis detail",
        "parameters": [],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get an Analysis detail",
        "operationId": "getAnalysisSummary"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CrawlStatistics"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Return global statistics for an analysis",
        "parameters": [],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Return global statistics for an analysis",
        "operationId": "getCrawlStatistics"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/time": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CrawlStatisticsTime"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min) for an analysis",
        "parameters": [
          {
            "description": "max number of elements to retrieve",
            "format": "int32",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit"
          },
          {
            "enum": [
              "1mn",
              "5mn",
              "60mn"
            ],
            "description": "Aggregation frequency",
            "required": true,
            "in": "query",
            "type": "string",
            "name": "frequency"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min)",
        "operationId": "getCrawlStatisticsByFrequency"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/urls/{list_type}": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        },
        {
          "enum": [
            "crawled",
            "errors"
          ],
          "name": "list_type",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "URLs list type (crawled URLs or error URLs)"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "schema": {
              "items": {
                "description": "Successful operation",
                "schema": {
                  "$ref": "#/definitions/CrawlStatisticsUrls"
                }
              },
              "type": "array"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)",
        "parameters": [],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)",
        "operationId": "getCrawlStatisticsUrls"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/ganalytics/orphan_urls/{medium}/{source}": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        },
        {
          "enum": [
            "organic",
            "social"
          ],
          "name": "medium",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Type of traffic, value: 'organic' (from search engine)or 'social' (from a social network)"
        },
        {
          "enum": [
            "all",
            "aol",
            "ask",
            "baidu",
            "bing",
            "facebook",
            "google",
            "google+",
            "linkedin",
            "naver",
            "pinterest",
            "reddit",
            "tumblr",
            "twitter",
            "yahoo",
            "yandex"
          ],
          "name": "source",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Traffic source, value: name of the search engine or social network"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/CrawlOrphanURLs"
                  },
                  "readOnly": true,
                  "type": "array",
                  "description": ""
                },
                "next": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "previous": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "page": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "size": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                }
              }
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "List of Orphan URLs. URLs which generated visits from the selected source according to Google Analytics data, but were not crawled with by the Botify crawler (either because no links to them were found on the website, or because the crawler was not allowed to follow these links according to the project settings).   For a search engine (medium: origanic; sources: all, aol, ask, baidu, bing, google, naver, yahoo, yandex) or a social network (medium: social; sources: all, facebook, google+, linkedin, pinterest, reddit, tumblr, twitter)",
        "parameters": [
          {
            "description": "Page Number",
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "description": "Page Size",
            "type": "integer",
            "name": "size",
            "in": "query"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List of Orphan URLs",
        "operationId": "getGanalyticsOrphanURLs"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/links/percentiles": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LinksPercentiles"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Get inlinks percentiles",
        "parameters": [],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get inlinks percentiles",
        "operationId": "getLinksPercentiles"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/pagerank/lost": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PageRankLost"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Lost pagerank",
        "parameters": [],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Lost pagerank",
        "operationId": "getPageRankLost"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/report": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SitemapsReport"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc.)",
        "parameters": [],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc",
        "operationId": "getSitemapsReport"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/out_of_config": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "results": {
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true,
                  "type": "array",
                  "description": ""
                },
                "next": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "previous": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "page": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "size": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                }
              }
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Sample list of URLs which were found in your sitemaps but outside of the crawl perimeter defined for the project, for instance domain/subdomain or protocol (HTTP/HTTPS) not allowed in the crawl settings.",
        "parameters": [
          {
            "description": "Page Number",
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "description": "Page Size",
            "type": "integer",
            "name": "size",
            "in": "query"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Sample list of URLs which were found in your sitemaps but outside of the",
        "operationId": "getSitemapsSamplesOutOfConfig"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/sitemap_only": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "results": {
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true,
                  "type": "array",
                  "description": ""
                },
                "next": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "previous": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "page": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "size": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                }
              }
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Sample list of URLs which were found in your sitemaps, within the project allowed scope (allowed domains/subdomains/protocols), but not found by the Botify crawler.",
        "parameters": [
          {
            "description": "Page Number",
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "description": "Page Size",
            "type": "integer",
            "name": "size",
            "in": "query"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Sample list of URLs which were found in your sitemaps, within the project",
        "operationId": "getSitemapsSamplesSitemapsOnly"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/domains": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/LinksTopDomains"
                  },
                  "readOnly": true,
                  "type": "array",
                  "description": ""
                },
                "next": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "previous": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "page": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "size": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                }
              }
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Top domains",
        "parameters": [
          {
            "description": "Page Number",
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "description": "Page Size",
            "type": "integer",
            "name": "size",
            "in": "query"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Top domains",
        "operationId": "getLinksTopDomains"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/subdomains": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/LinksTopDomains"
                  },
                  "readOnly": true,
                  "type": "array",
                  "description": ""
                },
                "next": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "previous": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "page": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "size": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                }
              }
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Top subddomains",
        "parameters": [
          {
            "description": "Page Number",
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "description": "Page Size",
            "type": "integer",
            "name": "size",
            "in": "query"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Top subddomains",
        "operationId": "getLinksTopSubdomains"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/UrlDetail"
                  },
                  "readOnly": true,
                  "type": "array",
                  "description": ""
                },
                "next": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "previous": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "page": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "size": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                }
              }
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Executes a query and returns a paginated response",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UrlsQuery"
            },
            "name": "UrlsQuery",
            "in": "body"
          },
          {
            "enum": [
              "current",
              "disappeared",
              "new",
              "search_engines_orphans"
            ],
            "description": "Analysis context to execute the query",
            "default": "current",
            "required": false,
            "in": "query",
            "type": "string",
            "name": "area"
          },
          {
            "description": "Page Number",
            "format": "int32",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "page"
          },
          {
            "description": "Page Size",
            "format": "int32",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "size"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Executes a query and returns a paginated response",
        "operationId": "getUrls"
      },
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/aggs": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "items": {
                "description": "Successful operation",
                "schema": {
                  "$ref": "#/definitions/UrlsAggs"
                }
              },
              "type": "array"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Query aggregator. It accepts multiple queries",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UrlsAggsQueries"
            },
            "name": "UrlsAggsQueries",
            "in": "body"
          },
          {
            "enum": [
              "current",
              "disappeared",
              "new",
              "search_engines_orphans"
            ],
            "description": "",
            "default": "current",
            "required": false,
            "in": "query",
            "type": "string",
            "name": "area"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Query aggregator",
        "operationId": "getUrlsAggs"
      },
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/datamodel": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CrawlDatamodel"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Gets an Analysis datamodel",
        "parameters": [
          {
            "enum": [
              "current",
              "disappeared",
              "new",
              "search_engines_orphans"
            ],
            "description": "",
            "default": "current",
            "required": false,
            "in": "query",
            "type": "string",
            "name": "area"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Gets an Analysis datamodel",
        "operationId": "getUrlsDatamodel"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/export": {
      "post": {
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CsvExportStatus"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Creates a new UrlExport object and starts a task that will export the results into a csv. Returns the model id that manages the task",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UrlsQuery"
            },
            "name": "UrlsQuery",
            "in": "body"
          },
          {
            "enum": [
              "current",
              "disappeared",
              "new",
              "search_engines_orphans"
            ],
            "description": "",
            "default": "current",
            "required": false,
            "in": "query",
            "type": "string",
            "name": "area"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Creates a new UrlExport object and starts a task that will export the results into a csv",
        "operationId": "createUrlsExport"
      },
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/CsvExportStatus"
                  },
                  "readOnly": true,
                  "type": "array",
                  "description": ""
                },
                "next": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "previous": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "page": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "size": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                }
              }
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "A list of the CSV Exports requests and their current status",
        "parameters": [
          {
            "description": "Page Number",
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "description": "Page Size",
            "type": "integer",
            "name": "size",
            "in": "query"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "A list of the CSV Exports requests and their current status",
        "operationId": "getUrlsExports"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/export/{url_export_id}": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        },
        {
          "description": "Url Export ID",
          "required": true,
          "type": "string",
          "name": "url_export_id",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CsvExportStatus"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Checks the status of an CSVUrlExportJob object. Returns json object with the status.",
        "parameters": [],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Checks the status of an CSVUrlExportJob object",
        "operationId": "getUrlsExportStatus"
      }
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/suggested_filters": {
      "post": {
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UrlsAggsQuery"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Return most frequent segments (= suggested patterns in the previous version) for a Botify Query.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UrlsAggsQuery"
            },
            "name": "UrlsAggsQuery",
            "in": "body"
          },
          {
            "enum": [
              "current",
              "new"
            ],
            "description": "",
            "default": "current",
            "required": false,
            "in": "query",
            "type": "string",
            "name": "area"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Return most frequent segments (= suggested patterns in the previous version)",
        "operationId": "getUrlsSuggestedFilters"
      },
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        }
      ]
    },
    "/analyses/{username}/{project_slug}/{analysis_slug}/urls/{url}": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Analysis' identifier",
          "required": true,
          "type": "string",
          "name": "analysis_slug",
          "in": "path"
        },
        {
          "description": "(Urlencoded) Searched URL",
          "required": true,
          "type": "string",
          "name": "url",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UrlDetail"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Gets the detail of an URL for an analysis",
        "parameters": [
          {
            "description": "comma separated list of fields to return (c.f. URLs Datamodel)",
            "items": {
              "type": "string"
            },
            "required": false,
            "collectionFormat": "csv",
            "in": "query",
            "type": "array",
            "name": "fields"
          }
        ],
        "tags": [
          "Analysis"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Gets the detail of an URL for an analysis",
        "operationId": "getUrlDetail"
      }
    },
    "/projects/{username}": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Project"
                  },
                  "readOnly": true,
                  "type": "array",
                  "description": ""
                },
                "next": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "previous": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "page": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "size": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                }
              }
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "List all active projects for the user",
        "parameters": [
          {
            "description": "Page Number",
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "description": "Page Size",
            "type": "integer",
            "name": "size",
            "in": "query"
          }
        ],
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List all active projects for the user",
        "operationId": "getUserProjects"
      }
    },
    "/projects/{username}/{project_slug}/features/url_rewriting/rules_validator": {
      "post": {
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/URLRewritingRulesSerializer"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Match and replace parts of a URL based on rules passed in POST data.",
        "parameters": [],
        "tags": [
          "Project"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Match and replace parts of a URL based on rules passed in POST data",
        "operationId": "testUrlRewritingRules"
      },
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        }
      ]
    },
    "/projects/{username}/{project_slug}/filters": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/ProjectSavedFilter"
                  },
                  "readOnly": true,
                  "type": "array",
                  "description": ""
                },
                "next": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "previous": {
                  "readOnly": true,
                  "type": "string",
                  "description": ""
                },
                "page": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                },
                "size": {
                  "readOnly": true,
                  "type": "integer",
                  "description": ""
                }
              }
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "List all the project's saved filters (each filter's name, ID and filter value)",
        "parameters": [
          {
            "description": "Page Number",
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "description": "Page Size",
            "type": "integer",
            "name": "size",
            "in": "query"
          }
        ],
        "tags": [
          "Project"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List all the project's saved filters (each filter's name, ID and filter value)",
        "operationId": "getSavedFilters"
      }
    },
    "/projects/{username}/{project_slug}/filters/{identifier}": {
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        },
        {
          "description": "Saved Filter's identifier",
          "required": true,
          "type": "string",
          "name": "identifier",
          "in": "path"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ProjectSavedFilter"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Retrieves a specific saved filter's name, ID and filter value",
        "parameters": [],
        "tags": [
          "Project"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieves a specific saved filter's name, ID and filter value",
        "operationId": "getSavedFilter"
      }
    },
    "/projects/{username}/{project_slug}/urls/aggs": {
      "post": {
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Default"
            }
          },
          "default": {
            "description": "error payload",
            "schema": {
              "$ref": "#/definitions/DefaultPayload"
            }
          }
        },
        "description": "Project Query aggregator. It accepts multiple queries that will be executed on all completed analyses in the project",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UrlsAggsQueries"
            },
            "name": "UrlsAggsQueries",
            "in": "body"
          },
          {
            "enum": [
              "current",
              "disappeared",
              "new"
            ],
            "description": "Analysis context to execute the queries",
            "default": "current",
            "required": false,
            "in": "query",
            "type": "string",
            "name": "area"
          },
          {
            "description": "Last analysis on the trend",
            "required": false,
            "type": "string",
            "name": "last_analysis_slug",
            "in": "query"
          },
          {
            "description": "Max number of analysis to return",
            "format": "int32",
            "default": 20,
            "required": false,
            "maximum": "20",
            "minimum": "1",
            "in": "query",
            "type": "integer",
            "name": "nb_analyses"
          }
        ],
        "tags": [
          "Project"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Project Query aggregator",
        "operationId": "getProjectUrlsAggs"
      },
      "parameters": [
        {
          "description": "User's identifier",
          "required": true,
          "type": "string",
          "name": "username",
          "in": "path"
        },
        {
          "description": "Project's identifier",
          "required": true,
          "type": "string",
          "name": "project_slug",
          "in": "path"
        }
      ]
    }
  },
  "host": "api.botify.com",
  "schemes": [
    "https"
  ],
  "definitions": {
    "SitemapsReport": {
      "required": [
        "count",
        "sitemap_only",
        "sitemap_indexes",
        "sitemaps",
        "errors"
      ],
      "type": "object",
      "properties": {
        "count": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "sitemap_only": {
          "readOnly": false,
          "description": "",
          "$ref": "#/definitions/SitemapsReportOnly"
        },
        "sitemap_indexes": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SitemapsReportSitemap"
          },
          "readOnly": false,
          "type": "array"
        },
        "sitemaps": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SitemapsReportSitemap"
          },
          "readOnly": false,
          "type": "array"
        },
        "errors": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SitemapsReportSitemap"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "SitemapsReportSitemapError": {
      "required": [
        "type",
        "message"
      ],
      "type": "object",
      "properties": {
        "type": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "message": {
          "readOnly": false,
          "type": "string",
          "description": ""
        }
      }
    },
    "UrlsAggsQueries": {
      "items": {
        "$ref": "#/definitions/UrlsAggsQuery"
      },
      "type": "array"
    },
    "UrlsAggs": {
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "status": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "data": {
          "readOnly": false,
          "description": "",
          "$ref": "#/definitions/UrlsAgg"
        },
        "error": {
          "readOnly": false,
          "description": "",
          "$ref": "#/definitions/UrlsErrorAgg"
        }
      }
    },
    "CrawlOrphanURLs": {
      "required": [
        "url",
        "visits"
      ],
      "type": "object",
      "properties": {
        "url": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "visits": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        }
      }
    },
    "LinksPercentilesItem": {
      "required": [
        "min",
        "max",
        "url_total",
        "metric_total",
        "avg",
        "id"
      ],
      "type": "object",
      "properties": {
        "min": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "max": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "url_total": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "metric_total": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "avg": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "id": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        }
      }
    },
    "CrawlStatistics": {
      "required": [
        "depth_current",
        "pages_dones_networkerror",
        "pages_dones_3xx",
        "pages_dones",
        "pages_dones_2xx",
        "last_upd_dt",
        "pages_dones_5xx",
        "pages_dones_xxx",
        "pages_dones_4xx",
        "pages_known"
      ],
      "type": "object",
      "properties": {
        "depth_current": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "pages_dones_networkerror": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "pages_dones_3xx": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "pages_dones": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "pages_dones_2xx": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "last_upd_dt": {
          "readOnly": false,
          "type": "string",
          "description": "",
          "format": "date-time"
        },
        "pages_dones_5xx": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "pages_dones_xxx": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "pages_dones_4xx": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "pages_known": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        }
      }
    },
    "CrawlDatamodelGroup": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "name": {
          "readOnly": false,
          "type": "string",
          "description": ""
        }
      }
    },
    "UrlsQuery": {
      "type": "object",
      "properties": {
        "fields": {
          "description": "",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        },
        "filters": {
          "readOnly": false,
          "type": "object",
          "description": ""
        },
        "sort": {
          "description": "",
          "items": {
            "type": "object"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "PageRankLost": {
      "required": [
        "non_crawled",
        "external",
        "robots_txt"
      ],
      "type": "object",
      "properties": {
        "non_crawled": {
          "readOnly": false,
          "type": "number",
          "description": "",
          "format": "float"
        },
        "external": {
          "readOnly": false,
          "type": "number",
          "description": "",
          "format": "float"
        },
        "robots_txt": {
          "readOnly": false,
          "type": "number",
          "description": "",
          "format": "float"
        }
      }
    },
    "LinksTopDomains": {
      "required": [
        "follow_links",
        "nofollow_links",
        "domain",
        "follow_samples",
        "nofollow_samples",
        "unique_follow_links",
        "unique_nofollow_links"
      ],
      "type": "object",
      "properties": {
        "follow_links": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "nofollow_links": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "domain": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "follow_samples": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LinksTopDomainsSamples"
          },
          "readOnly": false,
          "type": "array"
        },
        "nofollow_samples": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LinksTopDomainsSamples"
          },
          "readOnly": false,
          "type": "array"
        },
        "unique_follow_links": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "unique_nofollow_links": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        }
      }
    },
    "LinksTopDomainsSamples": {
      "required": [
        "url",
        "sources",
        "unique_links"
      ],
      "type": "object",
      "properties": {
        "url": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "sources": {
          "description": "",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        },
        "unique_links": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "login": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "email": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "is_organization": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "url": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "date_joined": {
          "readOnly": false,
          "type": "string",
          "description": "",
          "format": "date-time"
        },
        "status": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "first_name": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "last_name": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "company_name": {
          "readOnly": false,
          "type": "string",
          "description": ""
        }
      }
    },
    "SitemapsReportSitemap": {
      "required": [
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "valid_urls": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "invalid_urls": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "file_type": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "error": {
          "readOnly": false,
          "description": "",
          "$ref": "#/definitions/SitemapsReportSitemapError"
        },
        "sitemap_indexes": {
          "description": "",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "CsvExportStatus": {
      "required": [
        "query"
      ],
      "type": "object",
      "properties": {
        "job_id": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "job_url": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "job_status": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "nb_results": {
          "description": "",
          "format": "int64",
          "maximum": 2147483647,
          "readOnly": false,
          "minimum": 0,
          "type": "integer"
        },
        "area": {
          "default": "current",
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "query": {
          "readOnly": false,
          "description": "",
          "$ref": "#/definitions/UrlsQuery"
        },
        "results": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "date_created": {
          "readOnly": true,
          "type": "string",
          "description": "",
          "format": "date-time"
        }
      }
    },
    "SitemapsReportOnly": {
      "required": [
        "out_of_configuration",
        "in_configuration"
      ],
      "type": "object",
      "properties": {
        "out_of_configuration": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "in_configuration": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        }
      }
    },
    "RewritingRuleSerializer": {
      "required": [
        "regex",
        "replace",
        "ignore_case"
      ],
      "type": "object",
      "properties": {
        "regex": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "replace": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "ignore_case": {
          "readOnly": false,
          "type": "boolean",
          "description": ""
        }
      }
    },
    "string": {
      "type": "object",
      "properties": {}
    },
    "LinksPercentiles": {
      "required": [
        "domain",
        "percentiles"
      ],
      "type": "object",
      "properties": {
        "domain": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "percentiles": {
          "description": "",
          "items": {
            "$ref": "#/definitions/LinksPercentilesItem"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "Default": {
      "type": "object",
      "properties": {}
    },
    "UrlsErrorAgg": {
      "required": [
        "message",
        "error_code"
      ],
      "type": "object",
      "properties": {
        "message": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "error_code": {
          "readOnly": false,
          "type": "string",
          "description": ""
        }
      }
    },
    "Analysis": {
      "required": [
        "user"
      ],
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "user": {
          "readOnly": false,
          "description": "",
          "$ref": "#/definitions/User"
        },
        "slug": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "url": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "features": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "urls_done": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "urls_in_queue": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "config": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "date_created": {
          "readOnly": false,
          "type": "string",
          "description": "",
          "format": "date-time"
        },
        "date_launched": {
          "readOnly": false,
          "type": "string",
          "description": "",
          "format": "date-time"
        },
        "date_finished": {
          "readOnly": false,
          "type": "string",
          "description": "",
          "format": "date-time"
        },
        "date_last_modified": {
          "readOnly": false,
          "type": "string",
          "description": "Date of last modified analysis",
          "format": "date-time"
        }
      }
    },
    "CrawlStatisticsTimePoint": {
      "required": [
        "count",
        "datetime"
      ],
      "type": "object",
      "properties": {
        "count": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "datetime": {
          "readOnly": false,
          "type": "string",
          "description": "",
          "format": "date-time"
        }
      }
    },
    "CrawlStatisticsTime": {
      "required": [
        "avg_delay",
        "http_code_2xx",
        "http_code_3xx",
        "http_code_4xx",
        "http_code_5xx",
        "http_code_xxx",
        "frequency",
        "last_update_date",
        "avg_size",
        "new_urls"
      ],
      "type": "object",
      "properties": {
        "avg_delay": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "readOnly": false,
          "type": "array"
        },
        "http_code_2xx": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "readOnly": false,
          "type": "array"
        },
        "http_code_3xx": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "readOnly": false,
          "type": "array"
        },
        "http_code_4xx": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "readOnly": false,
          "type": "array"
        },
        "http_code_5xx": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "readOnly": false,
          "type": "array"
        },
        "http_code_xxx": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "readOnly": false,
          "type": "array"
        },
        "frequency": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "last_update_date": {
          "readOnly": false,
          "type": "string",
          "description": "",
          "format": "date-time"
        },
        "avg_size": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "readOnly": false,
          "type": "array"
        },
        "new_urls": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CrawlStatisticsTimePoint"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "CrawlStatisticsUrls": {
      "required": [
        "http",
        "url",
        "delay_last_byte",
        "gzip",
        "length",
        "content_type",
        "date",
        "delay_first_byte"
      ],
      "type": "object",
      "properties": {
        "http": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "url": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "redirects_to": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "delay_last_byte": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "gzip": {
          "readOnly": false,
          "type": "boolean",
          "description": ""
        },
        "length": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "content_type": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "date": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "delay_first_byte": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        }
      }
    },
    "FieldValuesResult": {
      "required": [
        "value",
        "nb_urls"
      ],
      "type": "object",
      "properties": {
        "value": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "nb_urls": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        }
      }
    },
    "Project": {
      "required": [
        "name",
        "slug",
        "user",
        "current_settings"
      ],
      "type": "object",
      "properties": {
        "name": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "slug": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "user": {
          "readOnly": false,
          "description": "",
          "$ref": "#/definitions/User"
        },
        "current_settings": {
          "readOnly": false,
          "description": "",
          "$ref": "#/definitions/ProjectSettingsSerializer"
        },
        "active": {
          "readOnly": false,
          "type": "boolean",
          "description": ""
        },
        "date_created": {
          "readOnly": true,
          "type": "string",
          "description": ""
        }
      }
    },
    "AnalysisDetail": {
      "required": [
        "user"
      ],
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "user": {
          "readOnly": false,
          "description": "",
          "$ref": "#/definitions/User"
        },
        "slug": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "url": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "features": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "urls_done": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "urls_in_queue": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "config": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "date_launched": {
          "readOnly": false,
          "type": "string",
          "description": "",
          "format": "date-time"
        },
        "date_finished": {
          "readOnly": false,
          "type": "string",
          "description": "",
          "format": "date-time"
        },
        "date_last_modified": {
          "readOnly": false,
          "type": "string",
          "description": "Date of last modified analysis",
          "format": "date-time"
        },
        "failures": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "red_button_domain": {
          "readOnly": false,
          "type": "string",
          "description": ""
        }
      }
    },
    "ProjectSavedFilter": {
      "required": [
        "name",
        "filters"
      ],
      "type": "object",
      "properties": {
        "name": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "filters": {
          "readOnly": false,
          "type": "object",
          "description": ""
        },
        "identifier": {
          "readOnly": true,
          "type": "string",
          "description": ""
        }
      }
    },
    "UrlsAggsQuery": {
      "type": "object",
      "properties": {
        "filters": {
          "readOnly": false,
          "type": "object",
          "description": ""
        },
        "aggs": {
          "description": "",
          "items": {
            "type": "object"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "UrlsAgg": {
      "required": [
        "count"
      ],
      "type": "object",
      "properties": {
        "count": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "aggs": {
          "description": "",
          "items": {
            "type": "object"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "URLRewritingRulesSerializer": {
      "required": [
        "urls",
        "rules"
      ],
      "type": "object",
      "properties": {
        "urls": {
          "description": "",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        },
        "rules": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RewritingRuleSerializer"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "DefaultPayload": {
      "type": "object",
      "description": "default payload for object for all HTTP codes that are not covered individually",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Error Message"
            },
            "error_code": {
              "type": "string",
              "description": "Error Code"
            },
            "error_detail": {
              "type": "object",
              "description": "If available, detailed error"
            }
          }
        }
      }
    },
    "ProjectSettingsSerializer": {
      "required": [
        "start_urls",
        "max_nb_pages",
        "blacklisted_domains",
        "allowed_domains",
        "sitemaps",
        "header_settings"
      ],
      "type": "object",
      "properties": {
        "start_urls": {
          "description": "",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        },
        "max_nb_pages": {
          "description": "",
          "format": "int64",
          "maximum": 2147483647,
          "readOnly": false,
          "minimum": 1,
          "type": "integer"
        },
        "max_depth": {
          "description": "",
          "format": "int64",
          "maximum": 2147483647,
          "readOnly": false,
          "minimum": 0,
          "type": "integer"
        },
        "compare_crawl": {
          "readOnly": false,
          "type": "boolean",
          "description": ""
        },
        "blacklisted_domains": {
          "description": "",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        },
        "allowed_domains": {
          "description": "",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        },
        "respect_nofollow": {
          "readOnly": false,
          "type": "boolean",
          "description": ""
        },
        "crawl_gzip": {
          "readOnly": false,
          "type": "boolean",
          "description": ""
        },
        "has_robots_txt": {
          "readOnly": true,
          "type": "string",
          "description": ""
        },
        "user_agent": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "max_pages_per_sec": {
          "description": "",
          "format": "int64",
          "maximum": 2147483647,
          "readOnly": false,
          "minimum": 1,
          "type": "integer"
        },
        "extra_headers": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "google_social_auth_id": {
          "description": "",
          "format": "int64",
          "maximum": 2147483647,
          "readOnly": false,
          "minimum": -2147483648,
          "type": "integer"
        },
        "google_analytics_site_id": {
          "description": "",
          "format": "int64",
          "maximum": 2147483647,
          "readOnly": false,
          "minimum": -2147483648,
          "type": "integer"
        },
        "google_analytics_account_email": {
          "readOnly": false,
          "type": "string",
          "description": "Keep email in case user delete his social auth connection"
        },
        "google_analytics_nb_days": {
          "description": "",
          "format": "int64",
          "maximum": 90,
          "readOnly": false,
          "minimum": 1,
          "type": "integer"
        },
        "sitemaps": {
          "description": "",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        },
        "header_settings": {
          "description": "",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "CrawlDatamodelField": {
      "required": [
        "multiple",
        "name",
        "subtype",
        "group",
        "type",
        "id",
        "permissions"
      ],
      "type": "object",
      "properties": {
        "multiple": {
          "readOnly": false,
          "type": "boolean",
          "description": ""
        },
        "name": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "subtype": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "group": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "type": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "id": {
          "readOnly": false,
          "type": "string",
          "description": ""
        },
        "permissions": {
          "description": "",
          "items": {
            "type": "string"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "UrlDetail": {
      "type": "object",
      "properties": {}
    },
    "FieldValues": {
      "required": [
        "count",
        "results"
      ],
      "type": "object",
      "properties": {
        "count": {
          "readOnly": false,
          "type": "integer",
          "description": "",
          "format": "int64"
        },
        "results": {
          "description": "",
          "items": {
            "$ref": "#/definitions/FieldValuesResult"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    },
    "CrawlDatamodel": {
      "required": [
        "fields",
        "groups"
      ],
      "type": "object",
      "properties": {
        "fields": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CrawlDatamodelField"
          },
          "readOnly": false,
          "type": "array"
        },
        "groups": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CrawlDatamodelGroup"
          },
          "readOnly": false,
          "type": "array"
        }
      }
    }
  },
  "basePath": "/v1",
  "swagger": "2.0",
  "security": [
    {
      "DjangoRestToken": []
    }
  ],
  "securityDefinitions": {
    "DjangoRestToken": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
